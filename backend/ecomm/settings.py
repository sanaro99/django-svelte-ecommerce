"""
Django settings for ecomm project.

Generated by 'django-admin startproject' using Django 5.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

load_dotenv('.env')

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("DJANGO_SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Host validation
ALLOWED_HOSTS = [
    "localhost",
    "127.0.0.1",
    os.getenv("BACKEND_PROD_URL"),  # backend
]

# print("DEBUG: ALLOWED_HOSTS loaded:", ALLOWED_HOSTS)

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

INSTALLED_APPS += [
    "rest_framework",
    "oauth2_provider",
    "drf_spectacular",
    "catalog",
    "sales",
    "accounts",
    "corsheaders",
]

# CORS setup
CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",  # local frontend dev
    os.getenv("FRONTEND_PROD_URL"),  # frontend
]

# CSRF setup (only required if your frontend is using cookies for auth)
CSRF_TRUSTED_ORIGINS = [
    "http://localhost:5173",
    os.getenv("FRONTEND_PROD_URL"),
    "https://" + os.getenv("BACKEND_PROD_URL"),
]

CORS_ALLOW_CREDENTIALS = False

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "oauth2_provider.contrib.rest_framework.OAuth2Authentication",
        "rest_framework.authentication.SessionAuthentication",
    ],
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticated", # IsAuthenticated / AllowAny
    ],
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 12,
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.SearchFilter',
        'rest_framework.filters.OrderingFilter',
    ],
}

OAUTH2_PROVIDER = {
    "SCOPES": {
        "read:products": "Read products",
        "write:products": "Edit products",
        "read:orders": "Read orders",
        "write:orders": "Edit orders",
        "read:customers": "Read customers",
        "write:customers": "Edit customers",
        "read:cart": "Read cart",
        "write:cart": "Modify cart contents",
    }
}

SPECTACULAR_SETTINGS = {
    "TITLE": "E-commerce API",
    "DESCRIPTION": "API for E-commerce platform",
    "VERSION": "1.0.0",
    "SERVE_INCLUDE_SCHEMA": True,
    'OAUTH2_FLOWS': ['authorizationCode'],
    'OAUTH2_AUTHORIZATION_URL': "/o/authorize/",
    'OAUTH2_TOKEN_URL': "/o/token/",
    'OAUTH2_REFRESH_URL': None,
    'OAUTH2_SCOPES': {
        "read:products": "Read products",
        "write:products": "Edit products",
        "read:orders": "Read orders",
        "write:orders": "Edit orders",
        "read:customers": "Read customers",
        "write:customers": "Edit customers",
        "read:cart": "Read cart",
        "write:cart": "Modify cart contents",
    },
    "SWAGGER_UI_OAUTH2_CONFIG": {
        "clientId": os.getenv("CLIENT_ID"),
        "usePkceWithAuthorizationCodeGrant": True,
    },
    "SWAGGER_UI_SETTINGS": {
        "deepLinking": True,
        "withCredentials": True,
        "persistAuthorization": True,
        "oauth2RedirectUrl": os.getenv("BACKEND_PROD_URL") + "/docs/oauth2-redirect.html"
    },
}

# print("DEBUG: SPECTACULAR_SETTINGS loaded:", SPECTACULAR_SETTINGS)

LOGIN_URL = '/accounts/login/'
LOGIN_REDIRECT_URL = '/'

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ecomm.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ecomm.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": os.getenv("DB_NAME"),
        "USER": os.getenv("DB_USER"),
        "PASSWORD": os.getenv("DB_PASSWORD"),
        "HOST": os.getenv("DB_HOST"),
        "PORT": os.getenv("DB_PORT"),
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
